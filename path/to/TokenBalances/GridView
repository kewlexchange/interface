{sorted.map(token => (
  <Card
    key={token.address}
    isHoverable
    variant="bordered"
    className="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 shadow-sm hover:shadow-lg transition p-6 rounded-xl"
  >
    {/* --- Logo & Symbol */}
    <div className="flex items-center mb-4">
      {/* ðŸŽ¨ Degrade halka + iÃ§ beyaz kapsÃ¼l */}
      <div className="flex-shrink-0">
        <div className="w-12 h-12 rounded-full bg-gradient-to-tr from-purple-600 to-pink-500 p-1 shadow-md">
          <div className="bg-white dark:bg-gray-800 rounded-full w-full h-full overflow-hidden flex items-center justify-center">
            {token.logoURI ? (
              <img
                src={token.logoURI}
                alt={token.symbol}
                className="w-8 h-8 object-contain"
              />
            ) : (
              <span className="text-purple-600 font-bold">
                {token.symbol.slice(0, 2)}
              </span>
            )}
          </div>
        </div>
      </div>

      {/* Metin kÄ±smÄ± */}
      <div className="ml-4 truncate">
        <p className="text-lg font-semibold text-gray-900 dark:text-gray-100">
          {token.symbol}
        </p>
        <p className="text-sm text-gray-500 dark:text-gray-400">
          {token.name}
        </p>
      </div>
    </div>

    {/* --- Balance & Address */}
    <div className="flex items-center justify-between">
      <p className="text-xl font-mono font-bold text-purple-600">
        {formatBalance(token.balance)}
      </p>
      <p className="text-xs text-gray-400 dark:text-gray-500">
        {truncateAddress(token.address)}
      </p>
    </div>
  </Card>
))} 